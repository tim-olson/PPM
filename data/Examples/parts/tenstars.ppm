// ---------------------------------------------------------
// Create linear duplicate copies of a 5-Point Star  Parametric Part
// ---------------------------------------------------------
// Creates a planar 5-pointed star (tip-to-tip width = Size)
// and extrudes it along +Z by Depth.
// The golden-ratio inner-radius factor (0.381966) is used
// so the star remains regular at any scale.
// ---------------------------------------------------------
// Author : Tim Olson
// Date   : 2025-10-13
// ---------------------------------------------------------

// ------------------- Units --------------------------------
Units(1[in]);       // script uses inches

// --------------- User-Editable Parameters -----------------
Size  = Parameter("Star Width", 5, LINEAR, GreaterThan(0));  // tip-to-tip width
Depth = Parameter("Depth",      2, LINEAR, GreaterThan(0));  // extrusion depth

// --------------- Derived Geometry -------------------------
R = Size / 2;              // outer radius
r = R * 0.381966;          // inner radius (golden ratio)

// Pre-computed cosine / sine coefficients for the star points
// (angles start at 90� and proceed CCW)
c0 =  0.000000000;  s0 =  1.000000000;   //  90�
c1 = -0.587785252;  s1 =  0.809016994;   // 126�
c2 = -0.951056516;  s2 =  0.309016994;   // 162�
c3 = -0.951056516;  s3 = -0.309016994;   // 198�
c4 = -0.587785252;  s4 = -0.809016994;   // 234�
c5 =  0.000000000;  s5 = -1.000000000;   // 270�
c6 =  0.587785252;  s6 = -0.809016994;   // 306�
c7 =  0.951056516;  s7 = -0.309016994;   // 342�
c8 =  0.951056516;  s8 =  0.309016994;   //  18�
c9 =  0.587785252;  s9 =  0.809016994;   //  54�

 // ------------------ 2D Star Outline ----------------------
Star2D = Polyline(
    Point( R*c0, R*s0),
    Point( r*c1, r*s1),
    Point( R*c2, R*s2),
    Point( r*c3, r*s3),
    Point( R*c4, R*s4),
    Point( r*c5, r*s5),
    Point( R*c6, R*s6),
    Point( r*c7, r*s7),
    Point( R*c8, R*s8),
    Point( r*c9, r*s9),
    Point( R*c0, R*s0)     // close polyline
);

// --------------- Extrude to 3D ----------------------------
Star3D = Thickness(Star2D, Depth);  // +Z direction

// create 10 copies of a shape translated 7 dx, 5 dy, and 3 dz units.  Do not create editable user parameters, put the acutal values directly into the Move operation
TenStars3D = Move(Star3D, 7,5,3,10);  // 10 stars moved along the x axis 7 units x, 5 units y, 3 units z

// ----------------------- Output ---------------------------
Output(TenStars3D );
