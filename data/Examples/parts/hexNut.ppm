/// File: HexNut.ppm
// Description: ISO-style metric hex nut selector (M4–M20) with single NutBase call.
// Author: Tim Olson 
// Date: 2025-09-26
// Notes:
//   • Depends on Macro\NutBase.ppm (place this file's Macro folder beside HexNut.ppm).
//   • Uses a single NutBase(...) call to avoid eager-evaluation issues in IF(...).
//   • For M4, cone Ø is set slightly below across-flats for robust geometry.
// Confirmed : +1

// ----------------------------- Parameter & Units ------------------------------
Type = Parameter("Nut Type", "M6", Set("M4","M5","M6","M8","M10","M12","M14","M16","M20"));
Units(1[mm]);   // all dimensions are millimetres

// ------------------ Size scalars passed to Macro\NutBase.ppm ------------------
// NutBase expects five scalars in this order:
//   NutBase( across_flats, thickness, pitch, thread_dia, cone_dia )
//
// Below, each scalar is resolved once using nested IFs. Only one value survives
// per scalar based on the selected 'Type'. Documented definitions:
//
// • af (across_flats) — Hex width measured across opposite flats (spanner size).
//   - Controls overall hex profile size.
//   - Must be > 0; typical ISO values are used here.
//
// • th (thickness) — Nut height measured along the thread axis.
//   - Standard thickness for regular nuts (not “thin”/jam variants).
//
// • pi (pitch) — Thread pitch (distance between thread crests), coarse series.
//   - Matches the common coarse pitch for each M-size.
//
// • di (thread_dia) — Nominal major thread diameter (the “M” number).
//   - Drives core hole / thread features in the helper.
//
// • co (cone_dia) — Diameter used by NutBase to form the top/bottom chamfers.
//   - Keep co ≤ af. For tiny sizes, set co slightly below af to avoid degenerate
//     faces during blending. Hence M4 uses 6.8 instead of 7.0.

// ----- across_flats (af) -----
af = IF(Type=="M20",30, IF(Type=="M16",24, IF(Type=="M14",22, IF(Type=="M12",19,
     IF(Type=="M10",17, IF(Type=="M8",13,  IF(Type=="M6",10,  IF(Type=="M5", 8, 7))))))));

// ----- thickness (th) -----
th = IF(Type=="M20",16, IF(Type=="M16",13, IF(Type=="M14",11, IF(Type=="M12",10,
     IF(Type=="M10", 8, IF(Type=="M8",6.5, IF(Type=="M6", 5,  IF(Type=="M5", 4, 3.2))))))));

// ----- pitch (pi) -----
pi = IF(Type=="M20",2.5,IF(Type=="M16",2.0,IF(Type=="M14",2.0,IF(Type=="M12",1.75,
     IF(Type=="M10",1.5,IF(Type=="M8",1.25,IF(Type=="M6",1.0, IF(Type=="M5",0.8,0.7))))))));

// ----- thread_dia (di) -----
di = IF(Type=="M20",20, IF(Type=="M16",16, IF(Type=="M14",14, IF(Type=="M12",12,
     IF(Type=="M10",10, IF(Type=="M8", 8,  IF(Type=="M6", 6,  IF(Type=="M5", 5, 4))))))));

// ----- cone_dia (co) -----
// For M4 (fallback branch), use 6.8 to keep co < af (7.0) for solver robustness.
co = IF(Type=="M20",30, IF(Type=="M16",24, IF(Type=="M14",22, IF(Type=="M12",19,
     IF(Type=="M10",17, IF(Type=="M8",13,  IF(Type=="M6",10,  IF(Type=="M5", 8, 6.8))))))));

// ------------------------------- Build & Output ------------------------------
res = NutBase(af, th, pi, di, co);   // single, guarded call
Output(res);                         // insert resulting solid into the drawing
