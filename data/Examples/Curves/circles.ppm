// Name: Circles.ppm
// Description: Creates three orthogonal circles—one each in the XY, YZ, and XZ planes—with a shared, editable radius and center point.
// Author: Tim Olson
// Date: September 7, 2025
// Notes: Save as a .ppm file and load via the Parametric Parts palette (TurboCAD Platinum or equivalent).
// Parameters control radius and the common 3D center for all three circles.
// Uses RotateX and RotateY to orient the circles per TurboCAD PPM scripting docs.
// Confirmed: +1

// --- Units (optional but recommended) ---
Units(1[in]); // Work in inches; change to 1[mm] if preferred

// --- Parameters ---
R  = Parameter("Radius", 2, LINEAR, GreaterThan(0));                    // Circle radius
CX = Parameter("Center X", 0, LINEAR, Interval(-100, 100));            // X of common center
CY = Parameter("Center Y", 0, LINEAR, Interval(-100, 100));            // Y of common center
CZ = Parameter("Center Z", 0, LINEAR, Interval(-100, 100));            // Z of common center

// --- Input (lists the script's inputs for clarity / re-use as a custom function) ---
Input(R, CX, CY, CZ);

// --- Build geometry ---
// Start with a base circle in the XY plane at the origin (z=0)
BaseXY = Circle(R); // 2D circle centered at (0,0) in XY

// Circle in the XY plane, positioned at (CX, CY, CZ)
C_XY = Move(BaseXY, CX, CY, CZ); // translate in 3D so its center is (CX, CY, CZ)

// Circle in the XZ plane: rotate base circle about X by -90°, then position
C_XZ = Move(RotateX(BaseXY, -90), CX, CY, CZ); // lies in XZ plane

// Circle in the YZ plane: rotate base circle about Y by +90°, then position
C_YZ = Move(RotateY(BaseXY, 90),  CX, CY, CZ); // lies in YZ plane

// --- Output ---
// Output all three circles as separate objects
Output(C_XY, C_YZ, C_XZ);
