// File: Star.ppm
// Description: 2D five-point star (closed polyline) with controllable inner ratio and rotation
// Author: Tim Olson
// Date: 2025-09-06
// Confirmed : +1

Units(1[in]);  // inches

// ---------- Parameters ----------
Input(Cx, Cy, R, F, Rot);

Cx  = Parameter("Center X", 0.0, LINEAR);
Cy  = Parameter("Center Y", 0.0, LINEAR);

// Outer radius
R   = Parameter("Outer Radius", 2.0, LINEAR, GreaterThan(0));

// Inner radius factor (r = F*R). Classic = 1/phi^2 ≈ 0.381966.
F   = Parameter("Inner Radius Factor", 0.381966, LINEAR, Interval(0.2, 0.9));

// Rotation in DEGREES. 90° points a tip up (since trig is degree-based).
Rot = Parameter("Rotation (deg)", 90.0, LINEAR);

// ---------- Helpers (DEGREES, not radians) ----------  
r    = F * R;       // inner radius
step = 36.0;        // degrees between successive (outer/inner) points
t0   = Rot;         // starting angle in degrees

// ---------- Vertices (outer/inner alternating) ----------
P0 = Point(Cx + R * cos(t0 + 0*step),  Cy + R * sin(t0 + 0*step));
P1 = Point(Cx + r * cos(t0 + 1*step),  Cy + r * sin(t0 + 1*step));
P2 = Point(Cx + R * cos(t0 + 2*step),  Cy + R * sin(t0 + 2*step));
P3 = Point(Cx + r * cos(t0 + 3*step),  Cy + r * sin(t0 + 3*step));
P4 = Point(Cx + R * cos(t0 + 4*step),  Cy + R * sin(t0 + 4*step));
P5 = Point(Cx + r * cos(t0 + 5*step),  Cy + r * sin(t0 + 5*step));
P6 = Point(Cx + R * cos(t0 + 6*step),  Cy + R * sin(t0 + 6*step));
P7 = Point(Cx + r * cos(t0 + 7*step),  Cy + r * sin(t0 + 7*step));
P8 = Point(Cx + R * cos(t0 + 8*step),  Cy + R * sin(t0 + 8*step));
P9 = Point(Cx + r * cos(t0 + 9*step),  Cy + r * sin(t0 + 9*step));

// ---------- Closed polyline ----------
star = Polyline(P0, P1, P2, P3, P4, P5, P6, P7, P8, P9, P0);

// ---------- Output ----------
Output(star);
